#########################################################################################
# This file is part of FIWARE CyberCAPTOR, instance of Cyber Security Generic Enabler   #
#  Copyright (C) 2012-2015  Thales Services S.A.S.,                                     #
#  20-22 rue Grande Dame Rose 78140 VELIZY-VILACOUBLAY FRANCE                           #
#                                                                                       #
# FIWARE CyberCAPTOR is free software; you can redistribute                             #  
# it and/or modify it under the terms of the GNU General Public License                 #
# as published by the Free Software Foundation; either version 3 of the License,        #
# or (at your option) any later version.                                                #
#                                                                                       #
# FIWARE CyberCAPTOR is distributed in the hope                                         #
# that it will be useful, but WITHOUT ANY WARRANTY; without even the implied            #
# warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the             #
# GNU General Public License for more details.                                          #
#                                                                                       #
# You should have received a copy of the GNU General Public License                     #
# along with FIWARE Cyber Security Generic Enabler.                                     #
# If not, see <http://www.gnu.org/licenses/>.                                           #
#########################################################################################

from database import Base

from sqlalchemy import Column, Integer, Float, String, ForeignKey, Table, Text
from sqlalchemy.orm import relationship, backref


class CVSS(Base):
    __tablename__ = 'cvss'
    id = Column(Integer, primary_key=True)
    score = Column(Float)
    access_vector = Column(String)
    access_complexity = Column(String)
    authentication = Column(String)
    confidentiality_impact = Column(String)
    integrity_impact = Column(String)
    availability_impact = Column(String)


#association table
cpe_vulnerability = Table('cpe_vulnerability', Base.metadata,
                          Column('id_cpe', Integer, ForeignKey('cpe.id')),
                          Column('id_vulnerability', Integer, ForeignKey('vulnerability.id'))
)


class Vulnerability(Base):
    __tablename__ = 'vulnerability'

    id = Column(Integer, primary_key=True)
    cve = Column(String(20), index=True, unique=True)
    description = Column(Text)
    cvss_id = Column(Integer, ForeignKey('cvss.id'))

    cvss = relationship("CVSS", backref=backref('vulnerability', order_by=id))
    cpes = relationship('CPE', secondary=cpe_vulnerability, backref=backref('vulnerability', order_by=id))


class CPE(Base):
    __tablename__ = 'cpe'

    id = Column(Integer, primary_key=True)
    cpe_id = Column(String(100), unique=True, index=True)
